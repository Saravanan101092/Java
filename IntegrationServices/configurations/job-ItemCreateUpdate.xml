<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.2.xsd
	">
 
	<context:component-scan base-package="com.staples.pim.base.listenerandrunner" />
	
  <import resource="file:${SPRING_BATCH_CONFIG_DIR}/database.xml" />
  <import resource="file:${SPRING_BATCH_CONFIG_DIR}/context.xml" />
 
 
	<job id="itemCreateUpdateJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="convertDir">
			<tasklet transaction-manager="transactionManager"
				start-limit="1" allow-start-if-complete="false">
				<chunk reader="xmlProductReader" processor="productFilter"
				writer="multiOutputItemWriter" commit-interval="1">
				</chunk>
				<listeners>
					<listener ref="excelProductWriter" />
				</listeners>
			</tasklet>
		</step>
		<listeners>
			<listener ref="batchJobListener" />
		</listeners>
	</job>
	
	<!-- Filtering process -->
	<bean id="productFilter" class="com.staples.pim.delegate.createupdateitem.domain.ProductFilterStepXML" />

	<bean id="xmlProductReader" 
		class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="fragmentRootElementName" value="Product" />
		<property name="resource" ref="inputFile"/>
		<property name="unmarshaller" ref="productUnmarshaller" />
	</bean>

	<!-- Read and map values to object, via jaxb2 -->
	<bean id="productUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.staples.pim.base.common.bean.STEPProductInformation</value>
			</list>
		</property>
		<property name="marshallerProperties">
		<map>
			<entry key="jaxb.encoding">
				<value>UTF-8</value> 
			</entry>
		</map>
		</property>
	</bean>

	<bean id="xsvProductWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<!-- write to this xsv file -->
		<property name="resource" ref="outputFile" />
		<!--
		<property name="shouldDeleteIfExists" value="false" />
		-->
		<property name="appendAllowed" value="true" />
 
		<property name="lineAggregator">
		  <bean
			class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
			<property name="delimiter" value="~|~" />
			<property name="fieldExtractor">
			  <bean
				class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
				<property name="names" value="xSVofValues" />
			   </bean>
			</property>
		   </bean>
		</property>
		 
		<property name="headerCallback" ref="xsvHeaderFooterWriter" /> 
	</bean>
	<bean id="dbProductWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="sql">
		  <value>
	            <![CDATA[        
	            	insert into ALL_SKU_ATTRIBUTES( A0012,
D0247,
D0246,
D0249,
D0248,
D0243,
D0242,
D0245,
D0244,
D0241,
D0240,
D0259,
D0258,
D0257,
D0256,
D0255,
D0254,
D0253,
D0252,
D0251,
D0250,
A0045_RET,
A0045_NAD,
A0046_RET,
A0046_NAD,
A0043,
A0195,
A0194,
D0225,
D0224,
D0227,
D0226,
D0229,
D0228,
D0221,
D0220,
D0223,
A0051,
D0222,
D0238,
D0237,
D0236,
D0235,
A0197,
D0239,
D0230,
D0234,
D0233,
D0232,
D0231,
A0174,
A0173,
A0172,
A0171,
A0069,
A0068,
A0067_RET,
A0067_NAD,
D0194,
D0195,
A0075_RET,
A0075_NAD,
D0196,
D0197,
A0070,
D0198,
A0071,
D0199,
D0099,
A0166,
A0167,
A0164,
A0165,
D0095,
D0096,
D0097,
A0168,
D0098,
A0169,
D0093,
D0092,
D0091,
D0090,
D0193,
A0077_RET,
A0077_NAD,
A0076,
D0192,
D0191,
A0078_RET,
A0078_NAD,
D0190,
A0083,
D0185,
A0084,
D0186,
A0085,
A0498,
D0183,
D0184,
A0086,
D0189,
A0080,
A0497_RET,
A0497_NAD,
D0187,
A0082,
D0188,
A0175,
D0088,
A0177,
D0089,
A0178,
D0087,
A0152,
A0151,
A0150,
D0270,
A0092,
D0260,
D0261,
A0093,
D0262,
A0090,
D0263,
A0091,
D0264,
A0096,
D0265,
A0097,
D0266,
A0094,
D0267,
A0095,
D0268,
A0148,
D0269,
A0149,
A0146,
A0147,
A0144,
A0145,
A0142,
A0143,
A0161,
A0160,
A0163,
A0162,
A0099,
A0098,
D0273,
D0274,
D0271,
D0272,
D0275,
D0276,
A0157,
A0158,
A0159,
A0153,
A0154,
A0155,
A0156,
D0159,
D0158,
D0153,
D0152,
D0150,
D0157,
D0156,
D0155,
D0154,
D0160,
D0045,
D0148,
D0044,
D0147,
D0047,
D0046,
D0149,
D0041,
D0040,
A0244,
D0043,
A0243,
D0042,
D0140,
D0142,
A0342,
D0141,
D0049,
D0144,
D0048,
D0143,
D0146,
D0145,
D0032,
D0031,
D0030,
A0237,
D0036,
D0035,
D0034,
D0033,
D0179,
D0178,
D0039,
A0239,
D0177,
D0038,
D0176,
A0238,
D0037,
D0181,
D0182,
D0180,
A0240,
A0220,
D0021,
D0020,
D0023,
D0169,
D0022,
D0025,
D0024,
D0166,
D0027,
D0165,
D0026,
D0168,
D0029,
D0167,
D0028,
D0162,
D0161,
D0164,
D0163,
D0170,
D0171,
A0310,
D0019,
D0017,
D0112,
D0018,
D0113,
D0210,
D0211,
D0110,
D0212,
D0111,
D0213,
D0116,
D0214,
D0117,
D0215,
A0212,
D0114,
D0011,
D0216,
D0115,
D0217,
D0218,
A0211,
D0219,
D0118,
D0119,
A0017,
A0119,
A0118,
A0117,
A0013_RET,
A0013_NAD,
A0112,
A0111,
A0110,
A0116,
A0115,
A0114,
A0113,
D0200,
D0201,
D0100,
D0101,
A0302,
D0102,
D0103,
D0204,
D0205,
D0104,
D0202,
D0105,
A0307,
D0203,
D0106,
A0308,
D0208,
D0107,
A0309,
D0209,
D0108,
D0206,
D0109,
D0207,
A0107,
A0106,
A0109,
A0108,
A0101,
A0100,
A0103,
A0102,
A0105,
A0104,
A0140,
D0134,
D0135,
A0141,
D0132,
D0133,
D0130,
D0131,
A0339,
D0138,
D0139,
D0136,
D0137,
A0139,
A0138,
A0137,
A0136,
A0135,
A0134,
D0121,
D0122,
D0123,
D0124,
A0130,
D0120,
D0129,
D0125,
D0126,
D0127,
D0128,
A0128,
A0125,
A0124,
A0127,
A0126,
A0121,
A0120,
A0123,
A0122,
   A0027,
   A0028,
   A0025,
   A0026,
   A0024,
   A0254,
   D0015,
   D0016,
   A0022,
   A0214,
   D0013,
   D0014,
   A0318,
   D0012,
   A0213,
   A0210,
   A0029,
   A0066,
   A0404,
   A0065,
   A0015,
   A0011,
   A0030,
   A0018_RET,
   A0018_NAD,
   A0036,
   A0037,
   A0181,
   A0248,
   A0180,
   A0183,
   A0182,
   A0301,
   A0241,
   D0005,
   A0185,
   A0184,
   D0007,
   A0304,
   A0251,
   D0086,
   A0008,
   A0179,
   A0007,
   D0085,
   A0230,
   D0175,
   A0191,
   D0174,
   D0173,
   A0190,
   A0189,
   A0186,
   A0052,
   A0320,
   A0410,
   A0016,
   A0038,
   A0231,
   A0224,
   A0033,
   A0081,
   A0234,
   A0217,
   A0431,
   A0031,
   A0020,
   A0042,
   A0229, 
   D0285,
   Request_Type,
   Web_Super_Category,
   Web_Category,
   Web_Department,
   Web_Class,
   Web_Class_ID,
   STEP_Item_ID,
   A0501,
   Product_Specialist,
   Boomerang_Trigger,
   A0499,
   A0504,
   A0500,
   A0002,
   A0537
) 
				values (   :A0012,
:D0247,
:D0246,
:D0249,
:D0248,
:D0243,
:D0242,
:D0245,
:D0244,
:D0241,
:D0240,
:D0259,
:D0258,
:D0257,
:D0256,
:D0255,
:D0254,
:D0253,
:D0252,
:D0251,
:D0250,
:A0045_RET,
:A0045_NAD,
:A0046_RET,
:A0046_NAD,
:A0043,
:A0195,
:A0194,
:D0225,
:D0224,
:D0227,
:D0226,
:D0229,
:D0228,
:D0221,
:D0220,
:D0223,
:A0051,
:D0222,
:D0238,
:D0237,
:D0236,
:D0235,
:A0197,
:D0239,
:D0230,
:D0234,
:D0233,
:D0232,
:D0231,
:A0174,
:A0173,
:A0172,
:A0171,
:A0069,
:A0068,
:A0067_RET,
:A0067_NAD,
:D0194,
:D0195,
:A0075_RET,
:A0075_NAD,
:D0196,
:D0197,
:A0070,
:D0198,
:A0071,
:D0199,
:D0099,
:A0166,
:A0167,
:A0164,
:A0165,
:D0095,
:D0096,
:D0097,
:A0168,
:D0098,
:A0169,
:D0093,
:D0092,
:D0091,
:D0090,
:D0193,
:A0077_RET,
:A0077_NAD,
:A0076,
:D0192,
:D0191,
:A0078_RET,
:A0078_NAD,
:D0190,
:A0083,
:D0185,
:A0084,
:D0186,
:A0085,
:A0498,
:D0183,
:D0184,
:A0086,
:D0189,
:A0080,
:A0497_RET,
:A0497_NAD,
:D0187,
:A0082,
:D0188,
:A0175,
:D0088,
:A0177,
:D0089,
:A0178,
:D0087,
:A0152,
:A0151,
:A0150,
:D0270,
:A0092,
:D0260,
:D0261,
:A0093,
:D0262,
:A0090,
:D0263,
:A0091,
:D0264,
:A0096,
:D0265,
:A0097,
:D0266,
:A0094,
:D0267,
:A0095,
:D0268,
:A0148,
:D0269,
:A0149,
:A0146,
:A0147,
:A0144,
:A0145,
:A0142,
:A0143,
:A0161,
:A0160,
:A0163,
:A0162,
:A0099,
:A0098,
:D0273,
:D0274,
:D0271,
:D0272,
:D0275,
:D0276,
:A0157,
:A0158,
:A0159,
:A0153,
:A0154,
:A0155,
:A0156,
:D0159,
:D0158,
:D0153,
:D0152,
:D0150,
:D0157,
:D0156,
:D0155,
:D0154,
:D0160,
:D0045,
:D0148,
:D0044,
:D0147,
:D0047,
:D0046,
:D0149,
:D0041,
:D0040,
:A0244,
:D0043,
:A0243,
:D0042,
:D0140,
:D0142,
:A0342,
:D0141,
:D0049,
:D0144,
:D0048,
:D0143,
:D0146,
:D0145,
:D0032,
:D0031,
:D0030,
:A0237,
:D0036,
:D0035,
:D0034,
:D0033,
:D0179,
:D0178,
:D0039,
:A0239,
:D0177,
:D0038,
:D0176,
:A0238,
:D0037,
:D0181,
:D0182,
:D0180,
:A0240,
:A0220,
:D0021,
:D0020,
:D0023,
:D0169,
:D0022,
:D0025,
:D0024,
:D0166,
:D0027,
:D0165,
:D0026,
:D0168,
:D0029,
:D0167,
:D0028,
:D0162,
:D0161,
:D0164,
:D0163,
:D0170,
:D0171,
:A0310,
:D0019,
:D0017,
:D0112,
:D0018,
:D0113,
:D0210,
:D0211,
:D0110,
:D0212,
:D0111,
:D0213,
:D0116,
:D0214,
:D0117,
:D0215,
:A0212,
:D0114,
:D0011,
:D0216,
:D0115,
:D0217,
:D0218,
:A0211,
:D0219,
:D0118,
:D0119,
:A0017,
:A0119,
:A0118,
:A0117,
:A0013_RET,
:A0013_NAD,
:A0112,
:A0111,
:A0110,
:A0116,
:A0115,
:A0114,
:A0113,
:D0200,
:D0201,
:D0100,
:D0101,
:A0302,
:D0102,
:D0103,
:D0204,
:D0205,
:D0104,
:D0202,
:D0105,
:A0307,
:D0203,
:D0106,
:A0308,
:D0208,
:D0107,
:A0309,
:D0209,
:D0108,
:D0206,
:D0109,
:D0207,
:A0107,
:A0106,
:A0109,
:A0108,
:A0101,
:A0100,
:A0103,
:A0102,
:A0105,
:A0104,
:A0140,
:D0134,
:D0135,
:A0141,
:D0132,
:D0133,
:D0130,
:D0131,
:A0339,
:D0138,
:D0139,
:D0136,
:D0137,
:A0139,
:A0138,
:A0137,
:A0136,
:A0135,
:A0134,
:D0121,
:D0122,
:D0123,
:D0124,
:A0130,
:D0120,
:D0129,
:D0125,
:D0126,
:D0127,
:D0128,
:A0128,
:A0125,
:A0124,
:A0127,
:A0126,
:A0121,
:A0120,
:A0123,
:A0122,
:A0027,
:A0028,
:A0025,
:A0026,
:A0024,
:A0254,
:D0015,
:D0016,
:A0022,
:A0214,
:D0013,
:D0014,
:A0318,
:D0012,
:A0213,
:A0210,
:A0029,
:A0066,
:A0404,
:A0065,
:A0015,
:A0011,
:A0030,
:A0018_RET,
:A0018_NAD,
:A0036,
:A0037,
:A0181,
:A0248,
:A0180,
:A0183,
:A0182,
:A0301,
:A0241,
:D0005,
:A0185,
:A0184,
:D0007,
:A0304,
:A0251,
:D0086,
:A0008,
:A0179,
:A0007,
:D0085,
:A0230,
:D0175,
:A0191,
:D0174,
:D0173,
:A0190,
:A0189,
:A0186,
:A0052,
:A0320,
:A0410,
:A0016,
:A0038,
:A0231,
:A0224,
:A0033,
:A0081,
:A0234,
:A0217,
:A0431,
:A0031,
:A0020,
:A0042,
:A0229,
:D0285,
:A0003,
:Web_Super_Category,
:Web_Category,
:Web_Department,
:Web_Class,
:Web_Class_ID,
:STEP_Item_ID,
:A0501,
:Product_Specialist,
:Boomerang_Trigger,
:A0499,
:A0504,
:A0500,
:A0002,
:A0537 
)
	            ]]>
		  </value>
		</property>
		<!-- It will take care matching between object property and sql name parameter -->
		<property name="itemSqlParameterSourceProvider">
			<bean
			class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>

	<bean id="fixLengthProductWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<!-- write to this fix length file -->
		<property name="resource" ref="outputFile2" />
		<property name="shouldDeleteIfExists" value="false" />
 
		<property name="lineAggregator">
		  <bean
			class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
			<property name="delimiter" value="~|~" />
			<property name="fieldExtractor">
			  <bean
				class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
				<property name="names" value="fixLengthofValues" />
			   </bean>
			</property>
		   </bean>
		</property>
		<property name="headerCallback" ref="fixLengthHeaderFooterWriter" /> 
	</bean>
	<bean id="excelProductWriter" class="com.staples.pim.delegate.createupdateitem.writer.ProductExcelWriter">
		<!-- write to this xlsx file -->
 
	</bean>


	<bean id="multiOutputItemWriter" class="com.staples.pim.delegate.createupdateitem.writer.MultiOutputItemWriterStepXML">
	     <property name="delegateXSV" ref="xsvProductWriter"/>
	     <property name="delegateDB" ref="dbProductWriter"/>
	     <property name="delegateFIXLength" ref="fixLengthProductWriter"/>
	     <property name="delegateExcel" ref="excelProductWriter"/>
	</bean> 


	<bean id="xsvHeaderFooterWriter" class="com.staples.pim.delegate.commonusecases.writer.HeaderWriterForXSV">
	</bean> 

	<bean id="fixLengthHeaderFooterWriter" class="com.staples.pim.delegate.commonusecases.writer.HeaderWriterForFixLength">
	</bean> 

	<bean id="batchJobListener"
		class="com.staples.pim.delegate.createupdateitem.listenerrunner.BatchJobListenerItemCreateUpdate">
	</bean>
	<bean id="inputFile"
		class="org.springframework.core.io.FileSystemResource" scope="step">
		<constructor-arg value="#{jobParameters[inputFile]}" />
	</bean>
	<bean id="outputFile"
		class="org.springframework.core.io.FileSystemResource" scope="step">
		<constructor-arg value="#{jobParameters[outputFile]}" />
	</bean>
	<bean id="outputFile2"
		class="org.springframework.core.io.FileSystemResource" scope="step">
		<constructor-arg value="#{jobParameters[outputFile2]}" />
	</bean>
	
 
</beans>